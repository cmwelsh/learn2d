Vagrant.configure("2") do |config|
  # Use CoreOS to run Docker
  config.vm.box = "coreos"
  config.vm.box_url = "http://storage.core-os.net/coreos/amd64-generic/dev-channel/coreos_production_vagrant.box"

  # Use static IP for CoreOS VirtualBox VM
  config.vm.network :private_network, ip: "10.1.1.51"

  # Mount the whole project folder in the CoreOS VM
  config.vm.synced_folder "../", "/home/core/share", id: "core", :nfs => true,  :mount_options   => ['nolock,vers=3,udp']

  # Uncomment if you want to map ports from CoreOS to Mac OS X
  #config.vm.network :forwarded_port, guest: 80, host: 80

  config.vm.provider :virtualbox do |vb, override|
    # Speed up network access
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]

    # Adjust amount of memory available to CoreOS/Docker
    vb.customize ["modifyvm", :id, "--memory", 1024]
  end

  # @todo not sure what this does
  # plugin conflict
  if Vagrant.has_plugin?("vagrant-vbguest") then
    config.vbguest.auto_update = false
  end

  # @todo not sure what this does
  # mkempster
  # ask systemd to run docker in daemon mode on bootup
  #https://gist.github.com/philips/7555876
  config.vm.provision "file", source: "docker-local.service", destination: "/tmp/docker-local.service"
  config.vm.provision "shell",  inline: "cp /tmp/docker-local.service /media/state/units/docker-local.service"
  config.vm.provision "shell",  inline: "sudo systemctl restart local-enable.service"
end
